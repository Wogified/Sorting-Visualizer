{"version":3,"sources":["Components/Header.js","Algos/startingDataFunctions.js","Algos/animations.js","Algos/bubbleSort.js","Algos/insertionSort.js","Algos/mergeSort.js","Algos/quickSort.js","Components/SortGraphics.js","Components/SortStepper.js","Components/SortViewer.js","App.js","index.js"],"names":["useStyles","makeStyles","theme","header","flex","textAlign","toolbar","paddingLeft","listItemContainer","display","breakpoints","up","width","down","listItem","justifyContent","Header","name","onThemeToggle","onAlgoSelect","Algorithms","classes","useState","checkedA","checkedB","state","setState","drawerState","setDrawerState","toggleDrawer","open","event","type","key","AppBar","position","Toolbar","className","IconButton","onClick","fontSize","Drawer","anchor","onClose","List","map","item","ListItem","button","ListItemText","Typography","variant","title","color","Switch","checked","onChange","target","value","defaultProps","myColors","myOrange","deepOrange","myBlue","blue","myGreen","green","myRed","red","myPurple","purple","myTeal","teal","Node","val","this","genArr","n","x","i","push","array","temporaryValue","randomIndex","currentIndex","length","Math","floor","random","shuffle","swapArr","j","temp","AniStep","step","index","level","delayMult","last","setArrColor","arr","genericHelper","animation","setCurrStep","setSortStep","genericArrAnimate","animations","sortSpeed","delay","speed","timeouts","setTimeout","stopAnimation","clearTimeout","bubbleSort","cloneDeep","output","swapped","aStp","sortCount","tempStore","slice","count","concat","insertionSort","mergeSort","prevArr","helper","start","end","mid","L_arr","R_arr","Ln","Rn","left","right","a","b","arrImage","arrMid","arrStart","arrEnd","smallest","change","shift","arrTemp","mergeArr","quickSort","arr1","tempArr","swap","piv","pivot","pivotFinder","palette","sortElemContainer","sortElem","backgroundColor","primary","main","marginLeft","marginRight","borderTopLeftRadius","borderTopRightRadius","height","secondary","sortContainer","flexDirection","alignItems","SortGraphics","numElems","scramble","algo","sortState","desiredStep","currStep","setStepLimit","onStop","parentRef","useRef","useTheme","sortElems","setSortElems","animationTimeouts","setAnimationTimeouts","aniSteps","setAniSteps","containerDim","setContainerDim","contWidth","contHeight","window","innerWidth","windowWidth","setWindowWidth","useEffect","handleStartSort","resetArrColors","source","newArr","AnimateSortFinished","updateWidthAndHeight","addEventListener","removeEventListener","parentHeight","current","offsetHeight","parentWidth","offsetWidth","items","child","background","transitions","useTransition","from","opacity","enter","update","leave","config","mass","tension","friction","ref","props","rest","div","style","transform","interpolate","SortStepper","onSetDesiredStep","stepLim","onSetSortState","handleCurrStepUpdate","disabled","Paper","padding","marginTop","marginBottom","margin","overflowY","noTitle","description","itemContainer","paddingTop","sortGraphicsContainer","paddingBottom","slider","textContainer","titleContainer","marks","label","SortViewer","mobile","useMediaQuery","sliderState","setSlider","setSpeed","setSortState","setScramble","setDesiredStep","sortStep","stepLimit","handleStopSort","Grid","container","xs","sm","Button","Slider","aria-labelledby","valueLabelDisplay","min","max","newValue","Select","labelId","id","MenuItem","App","darkMode","setDarkMode","setAlgo","initTheme","cyan","A400","light","dark","responsiveFontSizes","createMuiTheme","ThemeProvider","CssBaseline","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.474b0cbf.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  AppBar,\n  Toolbar,\n  Typography,\n  makeStyles,\n  Switch,\n  IconButton,\n  Drawer,\n  List,\n  ListItem,\n  ListItemText,\n} from '@material-ui/core';\nimport MenuIcon from '@material-ui/icons/Menu';\n\nconst useStyles = makeStyles((theme) => ({\n  header: {\n    flex: 1,\n    textAlign: 'left',\n  },\n  toolbar: {\n    paddingLeft: 0,\n  },\n  listItemContainer: {\n    display: 'flex',\n    [theme.breakpoints.up('sm')]: {\n      width: '25vw',\n    },\n    [theme.breakpoints.down('xs')]: {\n      width: '50vw',\n    },\n  },\n  listItem: {\n    display: 'flex',\n    justifyContent: 'center',\n    width: '100%',\n  },\n}));\n\nfunction Header({ onThemeToggle, onAlgoSelect, Algorithms }) {\n  const classes = useStyles();\n  const [state, setState] = useState({\n    checkedA: true,\n    checkedB: true,\n  });\n  const [drawerState, setDrawerState] = useState(false);\n  // handling drawer menu toggle\n  const toggleDrawer = (open) => (event) => {\n    if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n      return;\n    }\n    setDrawerState(open);\n  };\n  // handling dark theme toggle\n  const handleChange = (name) => (event) => {\n    setState({ ...state, [name]: event.target.checked });\n    onThemeToggle();\n  };\n\n  return (\n    <AppBar position=\"static\">\n      <Toolbar className={classes.toolbar}>\n        <IconButton onClick={toggleDrawer(true)}>\n          <MenuIcon fontSize=\"large\" />\n        </IconButton>\n        {/* there is a warning that will pop up when using drawing about findDOMnode */}\n        <Drawer anchor=\"left\" open={drawerState} onClose={toggleDrawer(false)}>\n          <List>\n            {Algorithms.map((item) => (\n              <ListItem\n                button\n                className={classes.listItemContainer}\n                key={item.key}\n                onClick={() => onAlgoSelect(item)}\n              >\n                <ListItemText className={classes.listItem}>\n                  <Typography variant=\"h4\">{item.title}</Typography>\n                </ListItemText>\n              </ListItem>\n            ))}\n          </List>\n        </Drawer>\n        <Typography variant=\"h4\" color=\"inherit\" className={classes.header}>\n          Sort Viz\n        </Typography>\n        <Switch\n          checked={state.checkedB}\n          onChange={handleChange('checkedB')}\n          value=\"checkedB\"\n          color=\"secondary\"\n        />\n        <Typography variant=\"h6\" color=\"inherit\">\n          Dark Mode\n        </Typography>\n      </Toolbar>\n    </AppBar>\n  );\n}\n\nHeader.propTypes = {\n  onThemeToggle: PropTypes.func.isRequired,\n  onAlgoSelect: PropTypes.func.isRequired,\n  Algorithms: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nHeader.defaultProps = {};\nexport default Header;\n","import { deepOrange, blue, red, green, purple, teal } from '@material-ui/core/colors';\n\nconst myColors = {\n  myOrange: deepOrange[500],\n  myBlue: blue[400],\n  myGreen: green[200],\n  myRed: red[200],\n  myPurple: purple[500],\n  myTeal: teal[700],\n};\n\nclass Node {\n  constructor(val) {\n    this.value = val;\n    this.key = `${val}`;\n    this.color = myColors.myOrange;\n  }\n}\n\nfunction genArr(n) {\n  const x = [];\n  for (let i = 1; i <= n; i += 1) {\n    x.push(new Node(i));\n  }\n  return shuffle(x);\n}\n\nfunction resetArrColors(arr) {\n  for (let i = 0; i < arr.length; i += 1) {\n    arr[i].color = myColors.myOrange;\n  }\n  return arr;\n}\n\nfunction shuffle(array) {\n  let currentIndex = array.length;\n  let temporaryValue;\n  let randomIndex;\n\n  // While there remain elements to shuffle...\n  while (0 !== currentIndex) {\n    // Pick a remaining element...\n    randomIndex = Math.floor(Math.random() * currentIndex);\n    currentIndex -= 1;\n\n    // And swap it with the current element.\n    temporaryValue = array[currentIndex];\n    array[currentIndex] = array[randomIndex];\n    array[randomIndex] = temporaryValue;\n  }\n\n  return array;\n}\n\nfunction swapArr(array, i, j) {\n  let temp = array[i];\n  array[i] = array[j];\n  array[j] = temp;\n  return array;\n}\n\nexport { genArr, shuffle, swapArr, myColors, resetArrColors };\n","import { myColors } from './startingDataFunctions';\n\nclass AniStep {\n  constructor(array) {\n    this.step = 0;\n    this.index = 0;\n    this.array = array;\n    this.level = 5;\n    this.delayMult = 1;\n    this.last = false;\n  }\n\n  count() {\n    this.index += 1;\n  }\n\n  sortCount() {\n    this.step += 1;\n  }\n}\n\n// Set the entire input arr to desired color\nfunction setArrColor(arr, color) {\n  if (arr.length) {\n    for (let i = 0; i < arr.length; i += 1) {\n      if (arr[i]) arr[i].color = color;\n    }\n  }\n  return arr;\n}\n\n// setTimeout Animation Callback function\nfunction genericHelper(animation, setState, setCurrStep, setSortStep) {\n  const { array, index, step } = animation;\n  setCurrStep(index);\n  setSortStep(step);\n  setState([...array]);\n}\n\nfunction genericArrAnimate(animations, setState, setCurrStep, setSortStep, sortSpeed) {\n  const n = animations.length;\n  let delay = 200;\n  const speedRef = [600, 300, 200, 125, 75];\n  const speed = speedRef[sortSpeed];\n  const timeouts = [];\n\n  if (n) {\n    for (let i = 0; i < n; i += 1) {\n      const { delayMult, level } = animations[i];\n      if (level >= sortSpeed) {\n        timeouts.push(\n          setTimeout(genericHelper, delay, animations[i], setState, setCurrStep, setSortStep)\n        );\n        delay += speed * delayMult;\n      }\n    }\n  } else {\n    genericHelper(animations, setState, setCurrStep, setSortStep);\n  }\n\n  return timeouts;\n}\n\n// Generate a animation that sets the color of all elems to green incrementally\nfunction AnimateSortFinished(source, setState) {\n  const { myGreen } = myColors;\n  const timeouts = [];\n  let delay = 0;\n\n  for (let i = 0; i < source.length; i += 1) {\n    timeouts.push(\n      setTimeout(() => {\n        const newArr = [...source];\n        newArr[i].color = myGreen;\n        setState(newArr);\n      }, delay)\n    );\n    delay += 25;\n  }\n  return timeouts;\n}\n\nfunction stopAnimation(timeouts) {\n  for (let i = 0; i < timeouts.length; i += 1) {\n    clearTimeout(timeouts[i]);\n  }\n}\n\nexport { stopAnimation, AniStep, genericArrAnimate, setArrColor, AnimateSortFinished };\n\n// function printArr(arr) {\n//   let output = '[';\n//   let output2 = '[';\n//   let n = arr.length;\n//   const { myOrange, myGreen, myRed, myPurple, myTeal, myBlue } = myColors;\n//   for (let i = 0; i < arr.length; i += 1) {\n//     switch (arr[i].color) {\n//       case myBlue:\n//         output += 'b';\n//         break;\n//       case myOrange:\n//         output += 'o';\n//         break;\n//       case myGreen:\n//         output += 'g';\n//         break;\n//       case myRed:\n//         output += 'r';\n//         break;\n//       case myPurple:\n//         output += 'p';\n//         break;\n//       case myTeal:\n//         output += 't';\n//         break;\n//       default:\n//         break;\n//     }\n//     output2 += `${arr[i].value}`;\n//     if (i < arr.length - 1) {\n//       output += ',';\n//       output2 += ',';\n//     }\n//   }\n//   output += ']';\n//   // console.log(output2);\n//   console.log(output);\n//   console.log('='.repeat(n * 2 + 2));\n// }\n","import { cloneDeep } from 'lodash';\nimport { swapArr, myColors } from './startingDataFunctions';\nimport { AniStep, setArrColor } from './animations';\n\nfunction bubbleSort(arr, speed) {\n  let temp = cloneDeep(arr);\n  let output = [];\n  const { myBlue, myGreen, myOrange, myRed } = myColors;\n\n  // variable for determining whether or not any array values have been swapped per iteration\n  let swapped = false;\n  const aStp = new AniStep(arr);\n  output.push(cloneDeep(aStp));\n\n  // for loop to interate through the length of the array\n  for (let i = 0; i < arr.length; i += 1) {\n    //  nested for loop to check each element in the array against the rest of the array\n\n    for (let j = 0; j < arr.length - 1 - i; j += 1) {\n      aStp.sortCount();\n      // if the array elem at the current position is greater\n      // than the value at the next elem, then swap\n      const tempStore = [];\n      // setArrColor2(temp, [0, j], myOrange);\n      // if (j + 2 < temp.length - 1) setArrColor2(temp, [j + 2, temp.length], myOrange);\n      setArrColor(temp.slice(0, j), myOrange);\n      if (j + 2 < temp.length - 1) setArrColor(temp.slice(j + 1), myOrange);\n      temp[j].color = myBlue;\n      temp[j + 1].color = myBlue;\n      aStp.array = temp;\n      aStp.count();\n      aStp.delayMult = 1;\n      tempStore.push(cloneDeep(aStp));\n\n      if (temp[j].value > temp[j + 1].value) {\n        if (speed < 3) {\n          temp[j].color = myGreen;\n          temp[j + 1].color = myRed;\n          aStp.array = temp;\n          aStp.count();\n          aStp.delayMult = 1;\n          tempStore.push(cloneDeep(aStp));\n        }\n        swapArr(temp, j, j + 1);\n        swapped = true;\n\n        aStp.array = temp;\n        aStp.count();\n        aStp.delayMult = 1;\n        tempStore.push(cloneDeep(aStp));\n      } else if (speed < 3) {\n        temp[j].color = myRed;\n        temp[j + 1].color = myGreen;\n        aStp.array = temp;\n        aStp.count();\n        aStp.delayMult = 1;\n        tempStore.push(cloneDeep(aStp));\n      }\n\n      output = output.concat(tempStore);\n    }\n    if (!swapped) {\n      break;\n    } else swapped = false;\n  }\n\n  // Clear out all colors and mark as last step\n  setArrColor(aStp.array, myOrange);\n  aStp.last = true;\n  aStp.count();\n  output.push(cloneDeep(aStp));\n  return output;\n}\n\nexport default bubbleSort;\n","import { cloneDeep } from 'lodash';\nimport { swapArr, myColors } from './startingDataFunctions';\nimport { AniStep, setArrColor } from './animations';\n\nfunction insertionSort(arr, speed) {\n  let count = 0;\n  const temp = cloneDeep(arr);\n  let output = [];\n  const { myBlue, myGreen, myOrange, myRed } = myColors;\n  let swapped = false;\n  const aStp = new AniStep(arr);\n  output.push(cloneDeep(aStp));\n  // for loop that starts at the second element\n  for (let i = 1; i < arr.length; i += 1) {\n    // for loop to compare current value to previous value(s)\n    for (let j = i - 1; j >= 0; j -= 1) {\n      aStp.sortCount();\n      const tempStore = [];\n      // const animateStep = new AniStep(j + 1, j);\n\n      setArrColor(temp, myOrange);\n      // setArrColor(temp.slice(0, j), myOrange);\n      // if (j + 2 < temp.length - 1) setArrColor(temp.slice(j + 1), myOrange);\n      temp[j].color = myBlue;\n      temp[j + 1].color = myBlue;\n      aStp.array = temp;\n      aStp.count();\n      aStp.delayMult = 1;\n      tempStore.push(cloneDeep(aStp));\n\n      if (temp[j + 1].value < temp[j].value) {\n        if (speed < 3) {\n          temp[j + 1].color = myGreen;\n          temp[j].color = myRed;\n          aStp.array = temp;\n          aStp.count();\n          aStp.delayMult = 1;\n          tempStore.push(cloneDeep(aStp));\n        }\n\n        swapArr(temp, j + 1, j);\n        swapped = true;\n        aStp.array = temp;\n        aStp.count();\n        aStp.delayMult = 1;\n        tempStore.push(cloneDeep(aStp));\n      } else if (speed < 3) {\n        temp[j + 1].color = myRed;\n        temp[j].color = myGreen;\n        aStp.array = temp;\n        aStp.count();\n        aStp.delayMult = 1;\n        tempStore.push(cloneDeep(aStp));\n      }\n      output = output.concat(tempStore);\n      count += 1;\n      if (!swapped) {\n        break;\n      } else swapped = false;\n    }\n  }\n\n  // Clear out all colors and mark as last step\n  setArrColor(aStp.array, myOrange);\n  aStp.last = true;\n  aStp.count();\n  output.push(cloneDeep(aStp));\n  return output;\n}\nexport default insertionSort;\n","import { cloneDeep } from 'lodash';\nimport { myColors } from './startingDataFunctions';\nimport { AniStep, setArrColor } from './animations';\n\nfunction mergeSort(arr, speed) {\n  let output = [];\n  const temp = cloneDeep(arr);\n  let prevArr = [...temp];\n  const { myBlue, myGreen, myOrange, myTeal, myPurple } = myColors;\n\n  const aStp = new AniStep(arr);\n  output.push(cloneDeep(aStp));\n\n  function mergeArr(a, b, start, end) {\n    aStp.sortCount();\n    // console.log(start, end);\n    const tempStore = [];\n    const arrImage = prevArr;\n    // array to store sorted values\n    let arrMid = [];\n    // array to store any values that precede values of interest\n    let arrStart = arrImage.slice(0, start);\n    // store values that are beyond the current values of interest\n    let arrEnd = arrImage.slice(end);\n    // highlight diff colors for current values of interest\n\n    // AniStep: Highlight target arrays to be sorted\n    arrStart = setArrColor(arrStart, myOrange);\n    if (speed < 3) arrMid = setArrColor(arrMid, myGreen);\n    else arrMid = setArrColor(arrMid, myOrange);\n    a = setArrColor(a, myTeal);\n    b = setArrColor(b, myPurple);\n    arrEnd = setArrColor(arrEnd, myOrange);\n    aStp.array = arrStart.concat(arrMid, a, b, arrEnd);\n    aStp.count();\n    aStp.level = 5;\n    aStp.delayMult = 2;\n    tempStore.push(cloneDeep(aStp));\n\n    while (a.length || b.length) {\n      let smallest;\n      let change = false;\n      if (speed < 3) {\n        arrMid = setArrColor(arrMid, myGreen);\n        if (a.length) a[0].color = myBlue;\n        if (b.length) b[0].color = myBlue;\n        aStp.array = arrStart.concat(arrMid, a, b, arrEnd);\n        aStp.level = 3;\n        aStp.delayMult = 1;\n        aStp.count();\n        tempStore.push(cloneDeep(aStp));\n      }\n\n      if (a.length && !b.length) {\n        smallest = a.shift();\n      } else if (!a.length && b.length) {\n        smallest = b.shift();\n      } else if (a[0].value < b[0].value) {\n        // change = true;\n        smallest = a.shift();\n      } else {\n        change = true;\n        smallest = b.shift();\n      }\n\n      arrMid.push(smallest);\n      // aStp.delayMult = 1;\n\n      if (change) {\n        aStp.array = arrStart.concat(arrMid, a, b, arrEnd);\n        aStp.level = 5;\n        aStp.delayMult = 2;\n        aStp.count();\n        tempStore.push(cloneDeep(aStp));\n      }\n      aStp.sortCount();\n    }\n    output = output.concat(tempStore);\n    // set final sorted portion of the array to be green\n\n    if (speed < 3) {\n      arrMid = setArrColor(arrMid, myGreen);\n      aStp.array = arrStart.concat(arrMid, arrEnd);\n      aStp.level = 5;\n\n      aStp.count();\n      output.push(cloneDeep(aStp));\n    }\n\n    const arrTemp = arrStart.concat(arrMid, arrEnd);\n    prevArr = arrTemp;\n\n    return arrMid;\n  }\n\n  function helper(array, start, end) {\n    // the base case is that if the length of the arr is less than or equal to 1 then return the arr\n    if (array.length <= 1) return array;\n    const n = array.length;\n    const mid = Math.floor(n / 2);\n\n    const L_arr = array.slice(0, mid);\n    const R_arr = array.slice(mid);\n\n    const Ln = mid - L_arr.length + start;\n    const Rn = n - R_arr.length + start;\n\n    const left = helper(L_arr, Ln, end);\n    const right = helper(R_arr, Rn, end);\n    // console.log(array, L_arr, R_arr);\n    const finalEnd = Ln + left.length + right.length;\n    // console.log(\"ahhh\", Ln, finalEnd);\n    // console.log(start, end, n);\n    return mergeArr(left, right, Ln, finalEnd);\n  }\n  let n = temp.length;\n  const result = helper(temp, 0, n);\n\n  // Clear out all colors and mark as last step\n  setArrColor(aStp.array, myOrange);\n  aStp.last = true;\n  aStp.count();\n  output.push(cloneDeep(aStp));\n\n  return output;\n}\n\nexport default mergeSort;\n","import { cloneDeep } from 'lodash';\nimport { myColors } from './startingDataFunctions';\nimport { AniStep, setArrColor } from './animations';\n\nfunction quickSort(arr1, speed) {\n  const tempArr = cloneDeep(arr1);\n  let output = [];\n  const { myBlue, myGreen, myOrange, myRed, myPurple, myTeal } = myColors;\n\n  const aStp = new AniStep(tempArr);\n  output.push(cloneDeep(aStp));\n\n  function swap(arr, i, j) {\n    let temp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = temp;\n  }\n  function pivotFinder(arr, start, end) {\n    const tempStore = [];\n\n    // const pivot = arr[start];\n    let i = start - 1;\n    let j = end + 1;\n    const mid = Math.floor((start + end) / 2);\n    const pivot = arr[mid];\n    setArrColor(arr, myOrange);\n    setArrColor(arr.slice(start, end + 1), myPurple);\n    // setArrColor(arr.slice(mid, end + 1), myTeal);\n    pivot.color = myBlue;\n    aStp.count();\n    aStp.array = arr;\n    aStp.delayMult = 3;\n    tempStore.push(cloneDeep(aStp));\n\n    while (true) {\n      i += 1;\n      while (arr[i].value < pivot.value) {\n        arr[i].color = myOrange;\n        aStp.delayMult = 1;\n        aStp.sortCount();\n        aStp.count();\n        aStp.array = arr;\n        tempStore.push(cloneDeep(aStp));\n        i += 1;\n      }\n      j -= 1;\n      while (arr[j].value > pivot.value) {\n        arr[j].color = myOrange;\n        aStp.delayMult = 1;\n        aStp.sortCount();\n        aStp.count();\n        aStp.array = arr;\n        tempStore.push(cloneDeep(aStp));\n        j -= 1;\n      }\n\n      if (i >= j) {\n        output = output.concat(tempStore);\n        return j;\n      }\n      swap(arr, i, j);\n      aStp.delayMult = 1;\n      aStp.count();\n      tempStore.push(cloneDeep(aStp));\n    }\n  }\n\n  function helper(arr, left, right) {\n    if (left < right) {\n      const piv = pivotFinder(arr, left, right);\n      helper(arr, left, piv);\n      helper(arr, piv + 1, right);\n    }\n  }\n  helper(tempArr, 0, tempArr.length - 1);\n\n  // Clear out all colors and mark as last step\n  setArrColor(aStp.array, myOrange);\n  aStp.last = true;\n  aStp.count();\n  output.push(cloneDeep(aStp));\n\n  return output;\n}\n\nexport default quickSort;\n","import React, { Fragment, useState, useEffect, useRef } from 'react';\nimport { useTransition, animated as a } from 'react-spring';\nimport { makeStyles, useTheme } from '@material-ui/core';\nimport PropTypes from 'prop-types';\nimport {\n  genArr,\n  resetArrColors,\n  stopAnimation,\n  bubbleSort,\n  insertionSort,\n  mergeSort,\n  quickSort,\n  genericArrAnimate,\n  AnimateSortFinished,\n} from '../Algos';\n\nconst useStyles = makeStyles(({ palette, breakpoints }) => ({\n  sortElemContainer: {\n    position: 'absolute',\n    display: 'flex',\n    justifyContent: 'center',\n  },\n  sortElem: {\n    backgroundColor: palette.primary.main,\n    marginLeft: '10%',\n    marginRight: '10%',\n    // margin: '10%',\n    borderTopLeftRadius: '5px',\n    borderTopRightRadius: '5px',\n    height: '100%',\n    width: '100%',\n    '&:hover': {\n      backgroundColor: palette.secondary.main,\n    },\n  },\n  sortContainer: {\n    width: '80%',\n    display: 'flex',\n    flexDirection: 'row',\n    alignItems: 'flex-end',\n    justifyContent: 'space-between',\n    [breakpoints.down('xs')]: {\n      height: '300px',\n    },\n    [breakpoints.up('sm')]: {\n      height: '500px',\n    },\n  },\n}));\n\nfunction SortGraphics({\n  numElems,\n  scramble,\n  speed,\n  algo,\n  sortState,\n  desiredStep,\n  currStep,\n  setCurrStep,\n  setStepLimit,\n  setSortStep,\n  onStop,\n}) {\n  const classes = useStyles({ numElems });\n  const parentRef = useRef(null);\n  const theme = useTheme();\n  // Controls the number of elements to sort\n  const [sortElems, setSortElems] = useState(genArr(numElems, theme));\n  // For tracking interval timeouts created by animation\n  const [animationTimeouts, setAnimationTimeouts] = useState([]);\n  // Keeps a history of all sort steps\n  const [aniSteps, setAniSteps] = useState([]);\n  // Tracks the size of the container for the sort elements\n  const [containerDim, setContainerDim] = useState([0, 0]);\n  const [contWidth, contHeight] = containerDim;\n  const [windowWidth, setWindowWidth] = useState(window.innerWidth);\n  const width = contWidth / numElems;\n\n  // Refreshes sort elems whenever the user changes the slider for num of sort elems\n  useEffect(() => {\n    setSortElems(genArr(numElems));\n  }, [numElems]);\n\n  // define limit for steps\n  useEffect(() => {\n    setStepLimit(aniSteps.length);\n  }, [aniSteps]);\n\n  // Handles Playback control updates\n  useEffect(() => {\n    if (sortState === 1) {\n      /*\n      Play State \n      if the sort process has not been started before, then use handleStartsort\n      Otherwise, use previously generated animation steps to continue from \n      where the animation was paused\n      */\n      if (currStep === 0) handleStartSort();\n      else {\n        const timeouts = genericArrAnimate(\n          aniSteps.slice(currStep),\n          setSortElems,\n          setCurrStep,\n          setSortStep,\n          speed\n        );\n        // Update animation timeouts so that they can be stopped if necessary\n        setAnimationTimeouts(timeouts);\n      }\n    } else if (sortState === 2) {\n      /*\n      Paused State \n\n      stop all animation timeouts.\n      */\n      stopAnimation(animationTimeouts);\n    } else if (sortState === 0) {\n      /*\n      Stop State\n\n      stop all animation timeouts \n      and reset all colors\n      */\n      stopAnimation(animationTimeouts);\n      setSortElems([...resetArrColors(sortElems)]);\n    }\n  }, [sortState]);\n\n  /*\n  Step by Step Animation controls.\n  as the desired step changes, the animation will update the sort elems\n*/\n  useEffect(() => {\n    if (sortState === 2 && desiredStep < aniSteps.length) {\n      genericArrAnimate(aniSteps[desiredStep], setSortElems, setCurrStep, setSortStep, speed);\n    }\n    if (aniSteps.length > 0) {\n      if (aniSteps[currStep].last && sortState === 1) {\n        AnimateSortFinished(sortElems, setSortElems);\n        onStop();\n      }\n    }\n  }, [desiredStep, currStep]);\n\n  // Handles window resizing\n  const updateWidthAndHeight = () => {\n    setWindowWidth(window.innerWidth);\n  };\n  useEffect(() => {\n    window.addEventListener('resize', updateWidthAndHeight);\n    return () => window.removeEventListener('resize', updateWidthAndHeight);\n  });\n\n  // Scrambles the elements\n  useEffect(() => {\n    stopAnimation(animationTimeouts);\n    setSortElems(genArr(numElems, theme));\n    onStop();\n  }, [scramble, algo]);\n\n  //   grab the dimensions of the parent element of the sorting elems\n  useEffect(() => {\n    const parentHeight = parentRef.current.offsetHeight;\n    const parentWidth = parentRef.current.offsetWidth;\n    setContainerDim([parentWidth, parentHeight]);\n  }, [parentRef, windowWidth]);\n\n  // React spring stuff\n  const items = sortElems.map((child, i) => {\n    const height = (child.value / numElems) * contHeight;\n    const background = child.color;\n    const x = width * i;\n    return { ...child, x, width, height, background };\n  });\n\n  const transitions = useTransition(items, (item) => item.key, {\n    from: ({ x, width, height }) => ({ x, width, height, opacity: 0 }),\n    enter: ({ x, width, height }) => ({ x, width, height, opacity: 1 }),\n    update: ({ x, width, height }) => ({ x, width, height }),\n    leave: { height: 0, opacity: 0 },\n    config: { mass: 1, tension: 500, friction: 50 },\n  });\n\n  const handleStartSort = () => {\n    // runs various sort algos and generates animation steps to show\n    let animations;\n    switch (algo.key) {\n      case 'bubble':\n        animations = bubbleSort(sortElems, speed);\n        break;\n      case 'insertion':\n        animations = insertionSort(sortElems, speed);\n        break;\n      case 'merge':\n        animations = mergeSort(sortElems, speed);\n        break;\n      case 'quick':\n        animations = quickSort(sortElems, speed);\n        break;\n      default:\n        animations = bubbleSort(sortElems);\n        break;\n    }\n    setAniSteps([...animations]);\n    const timeouts = genericArrAnimate(animations, setSortElems, setCurrStep, setSortStep, speed);\n    setAnimationTimeouts(timeouts);\n  };\n\n  function renderDivs() {\n    return transitions.map(({ item, props: { x, ...rest }, key }) => (\n      <a.div\n        className={classes.sortElemContainer}\n        key={key}\n        style={{\n          transform: x.interpolate((x) => `translate3d(${x}px,0,0)`),\n          ...rest,\n        }}\n      >\n        <a.div className={classes.sortElem} style={{ backgroundColor: item.color }} />\n      </a.div>\n    ));\n  }\n\n  return (\n    <Fragment>\n      <div className={classes.sortContainer} ref={parentRef}>\n        {renderDivs()}\n      </div>\n    </Fragment>\n  );\n}\n\nSortGraphics.propTypes = {\n  numElems: PropTypes.number.isRequired,\n  scramble: PropTypes.bool,\n  speed: PropTypes.number.isRequired,\n  algo: PropTypes.shape({\n    key: PropTypes.string,\n    title: PropTypes.string,\n  }),\n  sortState: PropTypes.number,\n  desiredStep: PropTypes.number,\n  currStep: PropTypes.number,\n  setCurrStep: PropTypes.func.isRequired,\n  setStepLimit: PropTypes.func.isRequired,\n  setSortStep: PropTypes.func.isRequired,\n  onStop: PropTypes.func.isRequired,\n};\n\nSortGraphics.defaultProps = {\n  scramble: false,\n  algo: null,\n  sortState: 0,\n  desiredStep: 0,\n  currStep: 0,\n};\n\nexport default SortGraphics;\n","import React, { Fragment } from 'react';\nimport { IconButton } from '@material-ui/core';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport ArrowForwardIcon from '@material-ui/icons/ArrowForward';\nimport PauseIcon from '@material-ui/icons/Pause';\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\nimport StopIcon from '@material-ui/icons/Stop';\nimport PropTypes from 'prop-types';\n\nfunction SortStepper({\n  onStop,\n  currStep,\n  onSetDesiredStep,\n  stepLim,\n  sortState,\n  onSetSortState,\n  algo,\n}) {\n  const handleCurrStepUpdate = (val) => {\n    if (val > 0 && currStep < stepLim) {\n      onSetDesiredStep(currStep + 1);\n    } else if (val < 0 && currStep > 0) {\n      onSetDesiredStep(currStep - 1);\n    }\n  };\n\n  const handlePlayPause = () => {\n    if (sortState === 0 || sortState === 2) onSetSortState(1);\n    else if (sortState === 1) onSetSortState(2);\n  };\n\n  return (\n    <Fragment>\n      <IconButton\n        disabled={sortState === 0 || currStep <= 0}\n        onClick={() => handleCurrStepUpdate(-1)}\n      >\n        <ArrowBackIcon />\n      </IconButton>\n      <IconButton disabled={!algo} onClick={handlePlayPause}>\n        {sortState === 1 ? <PauseIcon /> : <PlayArrowIcon />}\n      </IconButton>\n      <IconButton disabled={sortState === 0} onClick={onStop}>\n        <StopIcon />\n      </IconButton>\n      <IconButton\n        disabled={sortState === 0 || currStep >= stepLim}\n        onClick={() => handleCurrStepUpdate(1)}\n      >\n        <ArrowForwardIcon />\n      </IconButton>\n    </Fragment>\n  );\n}\n\nSortStepper.propTypes = {\n  algo: PropTypes.shape({\n    key: PropTypes.string,\n    title: PropTypes.string,\n  }),\n  sortState: PropTypes.number,\n  currStep: PropTypes.number,\n  onSetDesiredStep: PropTypes.func.isRequired,\n  onStop: PropTypes.func.isRequired,\n  stepLim: PropTypes.number,\n  onSetSortState: PropTypes.func.isRequired,\n};\n\nSortStepper.defaultProps = {\n  algo: null,\n  sortState: 0,\n  currStep: 0,\n  stepLim: 0,\n};\n\nexport default SortStepper;\n","import React, { Fragment, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Typography,\n  Grid,\n  Button,\n  makeStyles,\n  Slider,\n  useMediaQuery,\n  useTheme,\n  Select,\n  MenuItem,\n} from '@material-ui/core';\nimport SortGraphics from './SortGraphics';\nimport SortStepper from './SortStepper';\n\nconst useStyles = makeStyles(({ breakpoints }) => ({\n  Paper: {\n    [breakpoints.up('sm')]: {\n      padding: '2em',\n      marginTop: '1em',\n      marginBottom: '1em',\n      marginRight: '.5em',\n      height: 'calc(100% - 2em)',\n    },\n    [breakpoints.down('xs')]: {\n      padding: '1em',\n      margin: '0.5em',\n      height: 'calc(100% - 1em)',\n      overflowY: 'auto',\n    },\n    overflowY: 'auto',\n  },\n  title: {\n    textAlign: 'center',\n    padding: '.5em',\n  },\n  noTitle: {\n    width: '60vw',\n    textAlign: 'center',\n    padding: '.5em',\n  },\n  description: {\n    textAlign: 'center',\n    padding: '1em',\n    [breakpoints.up('sm')]: {\n      width: '50%',\n    },\n    [breakpoints.down('xs')]: {\n      width: '100%',\n    },\n  },\n  itemContainer: {\n    display: 'flex',\n    justifyContent: 'center',\n    paddingTop: 5,\n  },\n  sortGraphicsContainer: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    flexDirection: 'column',\n    paddingTop: '10vh',\n    paddingBottom: '10vh',\n  },\n  slider: {\n    [breakpoints.up('sm')]: {\n      width: '100%',\n    },\n    [breakpoints.down('xs')]: {\n      width: '80%',\n    },\n  },\n  textContainer: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  titleContainer: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'center',\n    height: '15vh',\n  },\n}));\n\nconst marks = [\n  {\n    value: 5,\n    label: '5',\n  },\n  {\n    value: 20,\n    label: '20',\n  },\n  {\n    value: 35,\n    label: '35',\n  },\n];\n\nfunction SortViewer({ algo }) {\n  const classes = useStyles();\n  const theme = useTheme();\n  // Detects if screen is mobile sized\n  const mobile = useMediaQuery(theme.breakpoints.down('xs'));\n  const [sliderState, setSlider] = useState(10);\n  const [speed, setSpeed] = useState(2);\n  const [sortState, setSortState] = useState(0);\n  const [scramble, setScramble] = useState(false);\n  // current animation step\n  const [currStep, setCurrStep] = useState(0);\n  // desired animation step\n  const [desiredStep, setDesiredStep] = useState(0);\n  // sort algorithm step\n  const [sortStep, setSortStep] = useState(0);\n  // sets maximum value that the stepper can go\n  const [stepLimit, setStepLimit] = useState(0);\n\n  // checks for screens that are mobile sized and below\n  const handleSpeedChange = (event) => {\n    setSpeed(event.target.value);\n  };\n  // Handle Slider\n  const handleElemsChange = (event, newValue) => {\n    setSlider(newValue);\n  };\n  // Handle scramble\n  const handleScramble = () => {\n    setScramble(!scramble);\n  };\n\n  // Handle End of Sort\n  const handleStopSort = () => {\n    setSortState(0);\n    setCurrStep(0);\n    setDesiredStep(0);\n    setStepLimit(0);\n    // setSortStep(0);\n  };\n  // On init, there is not algo selected. Therefore show instructions for usage\n  const renderTitle = () => {\n    if (algo) {\n      return (\n        <Typography className={classes.title} variant=\"h1\">\n          {algo.title}\n        </Typography>\n      );\n    }\n    return (\n      <Typography className={classes.noTitle} variant=\"h4\">\n        Choose a sorting algorithm from the menu in the top left corner.\n      </Typography>\n    );\n  };\n\n  return (\n    <Fragment>\n      <div className={classes.titleContainer}>{renderTitle()}</div>\n\n      <Grid container>\n        <Grid item xs={12} sm={4} className={classes.itemContainer}>\n          <Button onClick={handleScramble} disabled={sortState > 0}>\n            Scramble\n          </Button>\n        </Grid>\n        <Grid item xs={12} sm={4} className={classes.itemContainer}>\n          <Slider\n            className={classes.slider}\n            value={sliderState}\n            aria-labelledby=\"discrete-slider-custom\"\n            step={1}\n            valueLabelDisplay=\"auto\"\n            marks={mobile ? marks.slice(0, 2) : marks}\n            min={marks[0].value}\n            max={mobile ? 20 : 35}\n            onChange={handleElemsChange}\n            disabled={sortState > 0}\n          />\n        </Grid>\n        <Grid item xs={12} sm={4} className={classes.itemContainer}>\n          <Select\n            labelId=\"demo-simple-select-label\"\n            id=\"demo-simple-select\"\n            value={speed}\n            onChange={handleSpeedChange}\n            disabled={sortState > 0}\n          >\n            <MenuItem value={0}>Slow</MenuItem>\n            <MenuItem value={2}>Medium</MenuItem>\n            <MenuItem value={4}>Fast</MenuItem>\n          </Select>\n        </Grid>\n\n        <Grid item xs={12} sm={12} className={classes.itemContainer}>\n          <SortStepper\n            sortState={sortState}\n            onSetSortState={setSortState}\n            onStop={handleStopSort}\n            onSetDesiredStep={setDesiredStep}\n            stepLim={stepLimit}\n            currStep={currStep}\n            algo={algo}\n          />\n        </Grid>\n        <Grid item xs={12} sm={12} className={classes.itemContainer}>\n          <Typography>Step: {sortStep}</Typography>\n        </Grid>\n\n        <Grid item xs={12} sm={12} className={classes.sortGraphicsContainer}>\n          <SortGraphics\n            sortState={sortState}\n            numElems={sliderState}\n            scramble={scramble}\n            speed={speed}\n            algo={algo}\n            desiredStep={desiredStep}\n            currStep={currStep}\n            setCurrStep={setCurrStep}\n            setSortStep={setSortStep}\n            setStepLimit={setStepLimit}\n            onStop={handleStopSort}\n          />\n        </Grid>\n      </Grid>\n    </Fragment>\n  );\n}\n\nSortViewer.propTypes = {\n  algo: PropTypes.shape({\n    key: PropTypes.string,\n    title: PropTypes.string,\n  }),\n};\n\nSortViewer.defaultProps = {\n  algo: null,\n};\n\nexport default SortViewer;\n","import React, { Fragment, useState } from 'react';\nimport { CssBaseline, ThemeProvider, createMuiTheme, responsiveFontSizes } from '@material-ui/core';\nimport { deepOrange, cyan } from '@material-ui/core/colors';\nimport { algos as Algorithms } from './data.json';\nimport { Header, SortViewer } from './Components';\n\nfunction App() {\n  // Dark mode toggle\n  const [darkMode, setDarkMode] = useState('dark');\n  // Variable for which sort algo to use\n  const [algo, setAlgo] = useState(null);\n\n  // basic theme colors\n  const initTheme = {\n    palette: {\n      primary: deepOrange,\n      secondary: {\n        main: cyan.A400,\n        light: cyan[200],\n        dark: cyan[800],\n      },\n      type: darkMode,\n    },\n  };\n  // Scales the font sizes based on window size\n  const theme = responsiveFontSizes(createMuiTheme(initTheme));\n\n  // Callback for handling dark/light mode\n  const handleThemeToggle = () => {\n    setDarkMode(darkMode === 'light' ? 'dark' : 'light');\n  };\n\n  // Callback for handling algorithm selection\n  const handleAlgorithmSelect = (algo) => {\n    setAlgo(algo);\n  };\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Fragment>\n        {/* sets some default styling and paddings */}\n        <CssBaseline />\n        <Header\n          Algorithms={Algorithms}\n          onThemeToggle={handleThemeToggle}\n          darkMode={theme.palette.type}\n          onAlgoSelect={handleAlgorithmSelect}\n        />\n        <SortViewer algo={algo} Algorithms={Algorithms} />\n      </Fragment>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}